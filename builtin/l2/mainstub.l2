;
;                This code represents the very first code that is executed,
;                and is responsible for calling the main method and halting
;                the processor when returning from main.
OFFSET 0x0
IMPLEMENTS, REQUIRES EXTERNAL exitmain
IMPLEMENTS EXTERNAL __g_entry
REQUIRES EXTERNAL main
__g_entry:
ll SP 0x2000;    Arbitarily initialize the stack pointer to 0x200000
shl SP WR;       Shift to 0x20000
shl SP WR;       Shift to 0x200000
sub SP SP WR;    Adjust position of stack to just before 0x200000
sub SP SP WR;    Space for return value (int)
ll r1 exitmain;  Load the address of the exit routine.
sto SP r1;       Store the return address on the stack.
sub SP SP WR;    Move up to frame pointer
add FP SP ZR;    Copy the stack pointer into the frame pointer.
sto SP ZR;       There is no previous frame, so just store 0.
beq ZR ZR main;  Branch to main method.
exitmain:
;                This will halt the processor
ll r1 0x1;
add FR FR r1;
sw 0x100;
