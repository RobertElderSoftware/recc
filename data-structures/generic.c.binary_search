/*
	Copyright 2015 Robert Elder Software Inc.  All rights reserved.

	This software is not currently available under any license, and unauthorized use
	or copying is not permitted.

	This software will likely be available under a common open source license in the
	near future.  Licensing is currently pending feedback from a lawyer.  If you have
	an opinion on this subject you can send it to recc [at] robertelder.org.

	This program comes with ABSOLUTELY NO WARRANTY.  In no event shall Robert Elder
	Software Inc. be liable for incidental or consequential damages in connection with
	use of this software.
*/
#include "T0_IDENTIFIER_binary_search.h"
#include <assert.h>
#include <stdio.h>

int T0_IDENTIFIER_binary_search_impl(T0_LITERAL *, T0_LITERAL, int, int, int (*)(T0_LITERAL *, T0_LITERAL *));

int T0_IDENTIFIER_binary_search(T0_LITERAL * a, T0_LITERAL key, int num_items, int (*cmp_fcn)(T0_LITERAL *, T0_LITERAL *)){
	if(num_items > 0){
		return T0_IDENTIFIER_binary_search_impl(a, key, 0, num_items -1, cmp_fcn);
	}else if(num_items == 0){
		return -1;
	}else{
		assert(0 && "negative number of items.");
	}
}

int T0_IDENTIFIER_binary_search_impl(T0_LITERAL * a, T0_LITERAL key, int imin, int imax, int (*cmp_fcn)(T0_LITERAL *, T0_LITERAL *)){
	while (imax >= imin) {
		int imid = imin + ((imax - imin) / 2);
		int cmp_result = cmp_fcn(&a[imid], &key);
		if(cmp_result < 0){
			imin = imid + 1;
		}else if(cmp_result > 0){
			imax = imid - 1;
		}else{        
			return imid; 
		}
	}
	return -1;
}
